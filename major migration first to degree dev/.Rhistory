DS2 <- sqldf("select a.org, b.org as org1
from listall a, listall b
on 1=1
")
View(listall)
lvl <- unique(DS2$org1)
lvl
which(lvl=='43-Assoc Prov Undergraduate Education')
which(lvl=='5151-No Preference')
View(Agg1)
View(Agg2)
lvl <- unique(DS2$org1)
neworder <- c(lvl[172:173],lvl[1:171] , lvl[174:191])
neworder
View(majr)
majr <- sqldf("select a.*, b.Short_Desc as mjr_sn, b.Long_Desc as mjr_ln,
c.Short_Name as coll_sn,
c.Full_Name as coll_fn,
c.coll_code
from mjr1 a
left join majrmnt  b
on a.value=b.majrcode
left join College c
on b.coll_code=c.coll_code")
View(majr)
majr$Coll1st <- paste0( 'Assoc Prov Undergraduate Education','-43')
majr$Majr1st <- paste0( majr$MAJOR_NAME_FIRST,'-5151')
majr$Collde <- ifelse(majr$Coll_Code==43, 'Never Declare Majr-99',   paste0( majr$coll_fn,'-',majr$Coll_Code) )
majr$majrde <- ifelse(majr$value==5151, 'Never Declare Majr-9999',  paste0( majr$mjr_ln,'-',majr$value) )
View(majr)
library(dplyr)
Agg1 <- majr %>% group_by(COHORT, Coll1st,Collde ) %>% summarise(count=n())
Agg2 <- majr %>% group_by(COHORT, Coll1st,Collde, Majr1st,  majrde) %>% summarise(count=n())
Agg3 <- majr %>% group_by(COHORT,  Majr1st,  majrde) %>% summarise(count=n())
Agg4 <- majr %>% group_by(COHORT, Coll1st, majrde) %>% summarise(count=n())
Agg5 <- majr %>% group_by(COHORT, Majr1st,  Collde) %>% summarise(count=n())
DS1<- sqldf("select distinct Coll1st as coll, Majr1st as mjr
from Agg2
union
select distinct Collde ,majrde
from Agg2")
t<- split(DS1, DS1$coll)
listf <- function(x){ c(unique(x$coll),x$mjr)}
test <- sapply(t, listf)
listall <- as.data.frame(do.call(c,test))
#listall<-as.data.frame(listall[!duplicated(listall), ])
colnames(listall) <- "Org"
listall$merge <-1
View(listall)
View(DS1)
DS2 <- sqldf("select a.org, b.org as org1
from listall a, listall b
on 1=1
")
lvl <- unique(DS2$org1)
which(lvl=='43-Assoc Prov Undergraduate Education')
which(lvl=='Assoc Prov Undergraduate Education-43')
lvl[51]
neworder <- c(lvl[50:51],lvl[1:49] , lvl[52:191])
neworder
levels(DS2$Org) <- neworder
DS2$org1 <- as.factor(DS2$org1)
levels(DS2$org1) <- neworder
names(Agg3)<-names(Agg1)
names(Agg4) <- names(Agg1)
names(Agg5) <- names(Agg1)
mainds <- rbind(Agg1, Agg3, Agg4, Agg5)
View(mainds)
mds_2009 <- mainds%>% filter(COHORT==2009)
DS2_2009 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2009 b
on a.org=COLLEGE_FIRST_NAME and a.org1=COLLEGE_DEGREE_NAME ")
xtb_2009 <- xtabs(count ~ Org + org1,data=DS2_2009)
DS2_2009 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2009 b
on a.org=Coll1st and a.org1=Collde ")
View(DS2_2009)
DS2_2009%>%group_by(Org)%>% summarise(sum(count))
xtb_2009 <- xtabs(count ~ Org + org1,data=DS2_2009)
mds_2008 <- mainds%>% filter(COHORT==2008)
DS2_2008 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2008 b
on on a.org=Coll1st and a.org1=Collde ")
mds_2008 <- mainds%>% filter(COHORT==2008)
DS2_2008 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2008 b
on a.org=Coll1st and a.org1=Collde ")
DS2_2008%>%group_by(Org)%>% summarise(sum(count))
#2009 new
vec_2009<-vector()
for(i in  seq(nrow(xtb_2009))) {
x<-c(xtb_2009[nrow(xtb_2009)+1-i,])
names(x)<-NULL
vec_2009<-rbind(x,vec_2009)
}
#2008 new
vec_2008<-vector()
for(i in  seq(nrow(xtb_2008))) {
x<-c(xtb_2008[nrow(xtb_2008)+1-i,])
names(x)<-NULL
vec_2008<-rbind(x,vec_2008)
}
xtb_2008 <- xtabs(count ~ Org + org1,data=DS2_2008)
#2009 new
vec_2009<-vector()
for(i in  seq(nrow(xtb_2009))) {
x<-c(xtb_2009[nrow(xtb_2009)+1-i,])
names(x)<-NULL
vec_2009<-rbind(x,vec_2009)
}
#2008 new
vec_2008<-vector()
for(i in  seq(nrow(xtb_2008))) {
x<-c(xtb_2008[nrow(xtb_2008)+1-i,])
names(x)<-NULL
vec_2008<-rbind(x,vec_2008)
}
neworder
View(listall)
View(Agg1)
coll <- unique(Agg1$Collde)
coll
coll[10]
collorder <- c(coll[10], coll[1:9], coll[11:16])
collorder
View(mds_2008)
neworder
View(DS2)
View(DS1)
coll <- unique(DS1$Collde)
coll <- unique(DS1$coll)
coll
coll[3]
collorder <- c(coll[3], coll[1:2], coll[4:17])
collorder
regionnum <- which(neworder==collorder)-1
which(neworder== collorder[1])
sapply(collorder, function(x){ which(neworder== x)})
t<-sapply(collorder, function(x){ which(neworder== x)})
regionnum <- sapply(collorder, function(x){ which(neworder== x)-1})
names <-substr(neworder,1,regexpr("-", neworder)-1)
names
neworder[163:173]
?regexpr
x <- neworder[163]
x
gregexpr("-",x)
gregexpr("-",x)[[1]]
length(gregexpr("-",x)[[1]])
gregexpr("-",x)[[1]][1]
gregexpr("-",x)[[1]][2]
substr(x,1,31)
posall <- regexpr("-", neworder)[[1]]
posall
posall <- regexpr("-", neworder)
rev(neworder)
x
rev(regexpr("-"),x)
rev(regexpr("-",x))
regexpr("-",x)
gregexpr("-",x)
rev(gregexpr("-",x))
rev(gregexpr("-",x)[[1]])
rev(gregexpr("-",x)[[1]])[1]
pos <- function(x) {
rev(gregexpr("-",x)[[1]])[1]
}
position <- sapply(neworder, pos)
position[163]
names <-substr(neworder,1,position-1)
names
listtest <- list("2009"=vec_2009, "2008"=vec_2008)
list <- list("names"=names, "regions"=regionnum, "matrix"=listtest)
setwd("H:/GitHub/NSSC major migration/json")
require(RJSONIO)
#test<-paste0(row1x,",",row2x,collapse = "")
#names(test)<-"test1"
jsonOut<-toJSON(list)
#cat(jsonOut)
sink('data.json')
cat(jsonOut)
sink()
names(regionnum) <- NULL
list <- list("names"=names, "regions"=regionnum, "matrix"=listtest)
#library(reshape)
#vec<-reshape(DS2_2008,direction = "wide",id="org1", timevar = "Org")
require(RJSONIO)
#test<-paste0(row1x,",",row2x,collapse = "")
#names(test)<-"test1"
jsonOut<-toJSON(list)
#cat(jsonOut)
sink('data.json')
cat(jsonOut)
sink()
mds_2007 <- mainds%>% filter(COHORT==2007)
DS2_2007 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2007 b
on a.org=Coll1st and a.org1=Collde ")
xtb_2007 <- xtabs(count ~ Org + org1,data=DS2_2007)
mds_2006 <- mainds%>% filter(COHORT==2006)
DS2_2006 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2006 b
on a.org=Coll1st and a.org1=Collde ")
xtb_2006 <- xtabs(count ~ Org + org1,data=DS2_2006)
#2005
mds_2005 <- mainds%>% filter(COHORT==2005)
DS2_2005 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2005 b
on a.org=Coll1st and a.org1=Collde ")
xtb_2005 <- xtabs(count ~ Org + org1,data=DS2_2005)
DS2_2005_09 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mainds b
on a.org=Coll1st and a.org1=Collde ")
xtb_2005_09 <- xtabs(count ~ Org + org1,data=DS2_2005_09)
vec_2007<-vector()
for(i in  seq(nrow(xtb_2007))) {
x<-c(xtb_2007[nrow(xtb_2007)+1-i,])
names(x)<-NULL
vec_2007<-rbind(x,vec_2007)
}
#2006 new
vec_2006<-vector()
for(i in  seq(nrow(xtb_2006))) {
x<-c(xtb_2006[nrow(xtb_2006)+1-i,])
names(x)<-NULL
vec_2006<-rbind(x,vec_2006)
}
#2005 new
vec_2005<-vector()
for(i in  seq(nrow(xtb_2005))) {
x<-c(xtb_2005[nrow(xtb_2005)+1-i,])
names(x)<-NULL
vec_2005<-rbind(x,vec_2005)
}
vec_2005_09<-vector()
for(i in  seq(nrow(xtb_2005_09))) {
x<-c(xtb_2005_09[nrow(xtb_2005_09)+1-i,])
names(x)<-NULL
vec_2005_09<-rbind(x,vec_2005_09)
}
listtest <- list("2009"=vec_2009, "2008"=vec_2008,"2007"=vec_2007, "2006"=vec_2006,"2005"=vec_2005, "All"=vec_2005_09)
list <- list("names"=names, "regions"=regionnum, "matrix"=listtest)
#library(reshape)
#vec<-reshape(DS2_2008,direction = "wide",id="org1", timevar = "Org")
require(RJSONIO)
#test<-paste0(row1x,",",row2x,collapse = "")
#names(test)<-"test1"
jsonOut<-toJSON(list)
#cat(jsonOut)
sink('data.json')
cat(jsonOut)
sink()
View(College)
View(PAGmajrV)
View(PAGmajrV1)
View(majr_1st)
View(majr)
View(mjr1)
majr <- sqldf("select a.*, b.Short_Desc as mjr_sn_1st, b.Long_Desc as mjr_ln_1st,
c.Short_Name as coll_sn_1st,
c.Full_Name as coll_fn_1st,
c.coll_code as coll_code_1st,
b1.Long_Desc as mjr_ln_dgr,
b1.Coll_code as coll_code_dgr,
c1.Full_Name as coll_fn_dgr
from mjr1 a
left join majrmnt  b
on a.value=b.majrcode
left join College c
on b.coll_code=c.coll_code
left join majrmnt  b1
on a.MAJOR_DEGREE=b1.majrcode
left join College c1
on b1.coll_code=c1.coll_code
")
View(majr_1st)
View(majr)
majr$Coll1st <- ifelse(majr$coll_code_1st==43, 'Never Declare Majr-99',   paste0( majr$coll_fn_1st,'-',majr$Coll_Code_1st) )
majr$majrde <- ifelse(majr$value==5151, 'Never Declare Majr-9999',  paste0( majr$mjr_ln_1st,'-',majr$value) )
View(majr)
majr <- sqldf("select a.*, b.Short_Desc as mjr_sn_1st, b.Long_Desc as mjr_ln_1st,
c.Short_Name as coll_sn_1st,
c.Full_Name as coll_fn_1st,
c.coll_code as coll_code_1st,
b1.Long_Desc as mjr_ln_dgr,
b1.Coll_code as coll_code_dgr,
c1.Full_Name as coll_fn_dgr
from mjr1 a
left join majrmnt  b
on a.value=b.majrcode
left join College c
on b.coll_code=c.coll_code
left join majrmnt  b1
on a.MAJOR_DEGREE=b1.majrcode
left join College c1
on b1.coll_code=c1.coll_code
")
majr$Coll1st <- ifelse(majr$coll_code_1st==43, 'Never Declare Majr-99',   paste0( majr$coll_fn_1st,'-',majr$Coll_Code_1st) )
majr$majr1st <- ifelse(majr$value==5151, 'Never Declare Majr-9999',  paste0( majr$mjr_ln_1st,'-',majr$value) )
View(majr)
majr$Colldgr <- ifelse(is.na(majr$coll_code_dgr), 'Not Graduate-88', paste0(majr$coll_fn_dgr,'-',majr$coll_code_dgr))
View(majr)
majr$majrdgr <- ifelse(is.na(majr$MAJOR_DEGREE), 'Not Graduate-8888', paste0(majr$mjr_ln_dgr,'-',majr$MAJOR_DEGREE))
View(majr)
View(majr)
library(dplyr)
Agg1 <- majr %>% group_by(COHORT, Coll1st,Colldgr ) %>% summarise(count=n())
View(Agg1)
View(majr)
majr$Coll1st <- ifelse(majr$coll_code_1st==43, 'Never Declare Majr-99',   paste0( majr$coll_fn_1st,'-',majr$Coll_code_1st) )
View(majr)
majr$Coll1st <- ifelse(majr$coll_code_1st==43, 'Never Declare Majr-99',   paste0( majr$coll_fn_1st,'-',majr$coll_code_1st) )
View(majr)
Agg1 <- majr %>% group_by(COHORT, Coll1st,Colldgr ) %>% summarise(count=n())
View(Agg1)
Agg2 <- majr %>% group_by(COHORT, Coll1st,Colldgr, majr1st,  majrdgr) %>% summarise(count=n())
View(Agg2)
Agg3 <- majr %>% group_by(COHORT,  majr1st,  majrdgr) %>% summarise(count=n())
View(Agg3)
Agg4 <- majr %>% group_by(COHORT, Coll1st, majrdgr) %>% summarise(count=n())
View(Agg4)
Agg5 <- majr %>% group_by(COHORT, majr1st,  Colldgr) %>% summarise(count=n())
View(Agg5)
DS1<- sqldf("select distinct Coll1st as coll, Majr1st as mjr
from Agg2
union
select distinct Colldgr ,majrdgr
from Agg2")
t<- split(DS1, DS1$coll)
listf <- function(x){ c(unique(x$coll),x$mjr)}
test <- sapply(t, listf)
listall <- as.data.frame(do.call(c,test))
View(listall)
#listall<-as.data.frame(listall[!duplicated(listall), ])
colnames(listall) <- "Org"
listall$merge <-1
View(listall)
View(DS1)
View(listall)
DS2 <- sqldf("select a.org, b.org as org1
from listall a, listall b
on 1=1
")
lvl <- unique(DS2$org1)
levels(DS2$Org) <- lvl
DS2$org1 <- as.factor(DS2$org1)
levels(DS2$org1) <- lvl
names(Agg3)<-names(Agg1)
names(Agg4) <- names(Agg1)
names(Agg5) <- names(Agg1)
mainds <- rbind(Agg1, Agg3, Agg4, Agg5)
mds_2008 <- mainds%>% filter(COHORT==2008)
DS2_2008 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2008 b
on a.org=Coll1st and a.org1=Colldgr ")
xtb_2008 <- xtabs(count ~ Org + org1,data=DS2_2008)
mds_2009 <- mainds%>% filter(COHORT==2009)
DS2_2009 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2009 b
on a.org=Coll1st and a.org1=Colldgr ")
xtb_2009 <- xtabs(count ~ Org + org1,data=DS2_2009)
#2009 new
vec_2009<-vector()
for(i in  seq(nrow(xtb_2009))) {
x<-c(xtb_2009[nrow(xtb_2009)+1-i,])
names(x)<-NULL
vec_2009<-rbind(x,vec_2009)
}
#2008 new
vec_2008<-vector()
for(i in  seq(nrow(xtb_2008))) {
x<-c(xtb_2008[nrow(xtb_2008)+1-i,])
names(x)<-NULL
vec_2008<-rbind(x,vec_2008)
}
coll <- unique(DS1$coll)
coll
regionnum <- sapply(coll, function(x){ which(lvl== x)-1})
names(regionnum) <- NULL
pos <- function(x) {
rev(gregexpr("-",x)[[1]])[1]
}
position <- sapply(lvl, pos)
names <-substr(lvl,1,position-1)
names
listtest <- list("2009"=vec_2009, "2008"=vec_2008)
list <- list("names"=names, "regions"=regionnum, "matrix"=listtest)
setwd("H:/GitHub/NSSC first declared to degree")
require(RJSONIO)
#test<-paste0(row1x,",",row2x,collapse = "")
#names(test)<-"test1"
jsonOut<-toJSON(list)
#cat(jsonOut)
sink('data.json')
cat(jsonOut)
sink()
mds_2007 <- mainds%>% filter(COHORT==2007)
DS2_2007 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2007 b
on a.org=Coll1st and a.org1=Colldgr ")
xtb_2007 <- xtabs(count ~ Org + org1,data=DS2_2007)
mds_2006 <- mainds%>% filter(COHORT==2006)
DS2_2006 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2006 b
on a.org=Coll1st and a.org1=Colldgr ")
xtb_2006 <- xtabs(count ~ Org + org1,data=DS2_2006)
mds_2005 <- mainds%>% filter(COHORT==2005)
DS2_2005 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mds_2005 b
on a.org=Coll1st and a.org1=Colldgr ")
xtb_2005 <- xtabs(count ~ Org + org1,data=DS2_2005)
DS2_2005_09 <- sqldf("select  a.org, a.org1, (case when b.count is null then 0 else b.count end) as count
from DS2 a
left join mainds b
on a.org=Coll1st and a.org1=Colldgr ")
xtb_2005_09 <- xtabs(count ~ Org + org1,data=DS2_2005_09)
#2007 new
vec_2007<-vector()
for(i in  seq(nrow(xtb_2007))) {
x<-c(xtb_2007[nrow(xtb_2007)+1-i,])
names(x)<-NULL
vec_2007<-rbind(x,vec_2007)
}
#2006 new
vec_2006<-vector()
for(i in  seq(nrow(xtb_2006))) {
x<-c(xtb_2006[nrow(xtb_2006)+1-i,])
names(x)<-NULL
vec_2006<-rbind(x,vec_2006)
}
#2005 new
vec_2005<-vector()
for(i in  seq(nrow(xtb_2005))) {
x<-c(xtb_2005[nrow(xtb_2005)+1-i,])
names(x)<-NULL
vec_2005<-rbind(x,vec_2005)
}
#2005 to 2009 new
vec_2005_09<-vector()
for(i in  seq(nrow(xtb_2005_09))) {
x<-c(xtb_2005_09[nrow(xtb_2005_09)+1-i,])
names(x)<-NULL
vec_2005_09<-rbind(x,vec_2005_09)
}
listtest <- list("2009"=vec_2009, "2008"=vec_2008,"2007"=vec_2007, "2006"=vec_2006,"2005"=vec_2005, "All"=vec_2005_09)
list <- list("names"=names, "regions"=regionnum, "matrix"=listtest)
require(RJSONIO)
#test<-paste0(row1x,",",row2x,collapse = "")
#names(test)<-"test1"
jsonOut<-toJSON(list)
#cat(jsonOut)
sink('data.json')
cat(jsonOut)
sink()
coll
View(Agg1)
View(Agg1)
View(Agg1)
data <- Agg1[Agg1$COHORT==2005 & Agg1$Coll1st=='Agriculture and Natural Resources-2',]
data
names(data) <- c('Cohort', 'MAU', 'Majr')
View(data)
name <- data[1, "Majr"]
name
as.list(name)
as.list(name)
name <- as.list( data[1, "Majr"])
View(data)
names(data) <- c('Cohort', 'MAU', 'Majr','count')
size <- as.list( data[1, "count"])
c(name, size)
list1 <- c(name=name, size=size)
list <- list()
for (i in 1:7) {
name <- as.list( data[i, "Majr"])
size <- as.list( data[i, "count"])
list1 <- c(name=name, size=size)
list<- c(list,list1)
}
list1
names(list1)
list <- list()
for (i in 1:7) {
name <- as.list( data[i, "Majr"])
size <- as.list( data[i, "count"])
list1 <- c("name"=name, "size"=size)
list<- c(list,list1)
}
list1
list <- list()
for (i in 1:7) {
name <- as.list( data[i, "Majr"])
size <- as.list( data[i, "count"])
list1 <- c(name, size)
names(list1) <- c("name", "size")
list<- c(list,list1)
}
seq(data$Majr)
##test json
